// Mobile Navigation 
/* source: https://codepen.io/kirstenhumphreys/pen/vgaKmG */
// Customized to fit my design and color scheme


$items: 4;
$transition-duration: 0.5s;
$transition-delay: 0.05s;

.mobile {
    display: none;
}

// Phone
@media screen and (max-width: 600px) {
    .mobile {
        display: inline;
    }

    /* Toggle Functionality */

    #toggle {
        display: none; //hides the checkbox
    }

    // Styles for the 'open' state, if the checkbox is checked
    #toggle:checked {

        //Any element you need to change the style if menu is open goes here, using the sibling selector (~)
        &~.toggle-container .button-toggle {
            box-shadow: 0 0 0 550px #3533351a,
                inset 0 0 0 20px #3533351a;

            &:before {
                transform: translateY(-50%) rotate(45deg) scale(1);
            }

            &:after {
                transform: translateY(-50%) rotate(-45deg) scale(1);
            }
        }





        // Open Nav
        &~.navMobile {
            margin-bottom: 100px;
            pointer-events: auto;
            transform: translate(50px, 50px);

            // Restoring nav items from 'lines' in the menu icon
            .nav-item {
                text-decoration: none;
                color: $vibrant3;
                letter-spacing: 0;
                height: 40px;
                line-height: 40px;
                margin-top: 0;
                opacity: 1;
                transform: scaleY(1);
                transition: $transition-duration, opacity 0.1s;
                transition: cubic-bezier(0.075, 0.82, 0.165, 1) 500ms color;

                // Setting delays for the nav items in open transition
                @for $i from 1 through $items {
                    &:nth-child(#{$i}) {
                        $delay: ($items - $i) * $transition-delay;
                        transition-delay: $delay;

                        &:before {
                            transition-delay: $delay;
                        }
                    }
                }
                &:hover {
                    color: $vibrant1;

                }

                // Hide the lines
                &:before {
                    opacity: 0;
                }
            }
        }
    }

    /* Toggle Button */

    .button-toggle {
        position: absolute;
        display: inline-block;
        width: 20px;
        height: 20px;
        margin: 25px;
        background-color: transparent;
        border: none;
        cursor: pointer;
        border-radius: 100%;
        transition: $transition-duration + 0.1;

        // Making the 'X' icon using `:before` and `:after` pseudo-elements
        // Initially hidden beause of `scale(0)` transformation

        &:before,
        &:after {
            position: absolute;
            content: "";
            top: 50%;
            left: 0;
            width: 100%;
            height: 2px;
            background-color: $vibrant3;
            border-radius: 5px;
            transition: $transition-duration;
        }

        &:before {
            transform: translateY(-50%) rotate(45deg) scale(0);
        }

        &:after {
            transform: translateY(50%) rotate(-45deg) scale(0);
        }
    }

    /* Menu */
    .navMobile {
        display: inline-block;
        margin: 25px 25px 20px;
        pointer-events: none;
        transition: $transition-duration;
    }

    // Showing nav items as lines, making up the hamburger menu icon
    .nav-item {
        position: relative;
        display: flex;
        clear: both;
        color: transparent;
        letter-spacing: -6.2px;
        height: 7px;
        line-height: 7px;
        text-transform: uppercase;
        white-space: nowrap;
        transform: scaleY(0.2);
        transition: $transition-duration, opacity 1s;

        //Set delays for the nav items in close transition
        @for $i from 1 through $items {
            &:nth-child(#{$i}) {
                $delay: ($i - 1) * $transition-delay;
                transition-delay: $delay;

                &:before {
                    transition-delay: $delay;
                }
            }
        }

        // Adjusting width for first line
        &:nth-child(1) {
            letter-spacing: -8px;
        }

        // Adjusting width for second line
        &:nth-child(2) {
            letter-spacing: -7px;
        }

        // Adjusting the fourth element onwards
        &:nth-child(n + 4) {
            letter-spacing: -8px;
            margin-top: -7px;
            opacity: 0;
        }

        //getting lines for the hamburger menu icon
        &:before {
            position: absolute;
            content: "";
            top: 50%;
            left: 0;
            width: 100%;
            height: 2px;
            background-color: $vibrant3;
            transform: translateY(-50%) scaleY(5);
            transition: $transition-duration;
        }
    }
}